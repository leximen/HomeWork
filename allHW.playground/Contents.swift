Import UIKitIKit

//Task 1
/*Задание: Проверка булевых условий
 Описание: Разработайте систему, которая проверяет и выводит результаты на основе двух булевых значений.
 Требования:
 Проверка обоих условий:
 Имея два булевых значения, программа должна выводить "Оба условия выполняются", если оба условия истинны.
 В противном случае, программа должна выводить "Не все условия выполняются".
 Проверка хотя бы одного условия:
 Имея два булевых значения, программа должна выводить "Хотя бы одно из условий выполняется", если хотя бы одно из них истинно.
 В противном случае, программа должна выводить "Оба условия ложны".
 Ожидаемый результат: При запуске программы выводятся результаты на основе предоставленных булевых значений.*/

let isTrue = true
let isFalse = false

if isTrue && isFalse {
   print("Оба условия выполняются")
} else {
   print("Не все условия выполняются")
}

if isTrue || isFalse {
   print("Хотя бы одно из условий выполняется")
} else {
   print("Оба условия ложны")
}

//Task 2
/*Задание: Проверка четности числа
 Описание: Разработайте систему, которая определяет, является ли число четным или нечетным.
 Требования:
 Проверка на четность:
 Имея число, программа должна проверять его на четность.
 Если число четное, выводится "Число четное", в противном случае "Число нечетное".
 Ожидаемый результат: При запуске программы выводится результат на основе четности предоставленного числа.
*/
let num = 3
if ((num % 2) == 0) {
    print("Число четное")
} else {
    print("Число нечетное")
}

//Task 3
/*Задание: Доступ на мероприятие
 Описание: Создайте систему, которая определяет, может ли человек пройти на важное мероприятие на основе его возраста и наличия билета.
 Требования:
 Проверка возраста и билета:
 Используя булевые значения для возраста (совершеннолетний ли человек) и наличия билета, программа определяет, может ли человек пройти на мероприятие.
 Если условия выполняются, программа выводит "Добро пожаловать!", в противном случае "Доступ запрещен".
 Ожидаемый результат: При запуске программы выводится решение о допуске человека на мероприятие на основе предоставленных условий.
*/
let userAge = 19

if userAge > 18 {
    print("Добро пожаловать!")
} else {
    print("Доступ запрещен")
}

//Task 4
/* Задание: Работа со строками
 Описание: Разработайте программу, которая объединяет и выводит строки.
 Требования:
 Объединение строк:
 Имея три строки (имя, фамилия, отчество), программа объединяет их, используя пробелы между ними, и выводит результат.
 Ожидаемый результат: При запуске программы выводится полное имя.
*/
let name = "I"
let firstName = "Love"
let surName = "iOS"

print("""
      \(name) \(firstName) \(surName)
      """)

//Task 5
/*Задание: Операции с числами
 Описание: Разработайте программу, которая проводит базовые арифметические операции с числами.
 Требования:
 Арифметические операции:
 Имея два числа, программа вычисляет их сумму, разность, произведение и частное, затем выводит результат каждой операции.
 Ожидаемый результат: При запуске программы выводятся результаты арифметических операций.
*/
let num1 = 5
let num2 = 2

num1 + num2
num1 - num2
num1 * num2
num1 / num2

//Task 6
/*Задание: Точность чисел с плавающей запятой

 Описание: Разработайте систему, которая демонстрирует разницу в точности между типами данных Double и Float.
 Требования:
 Задайте две переменные: одну типа Double и одну типа Float.
 Выведите их значения на экран с максимальной точностью.
 Демонстрация разницы в точности:
 Продемонстрируйте разницу в точности этих двух типов, добавив или вычитая из них очень маленькое значение. Затем выводите результат на экран.
 Ожидаемый результат: При запуске программы пользователь увидит разницу в точности между Double и Float.
*/
var accuracy1: Double = 51.556486848641725
var accuracy2: Float = 21.564617

let sumAccyracy = accuracy1 - Double(accuracy2)

//Task 7
/*Задание: Условные операторы и возраст
 Описание: Создайте систему, которая определяет совершеннолетие человека на основе его возраста.
 Требования:
 Проверка возраста:
 Задайте переменную с возрастом.
 Напишите условие, которое проверяет, является ли человек совершеннолетним, и выводит соответствующее сообщение.
 Ожидаемый результат: При запуске программы на экран выводится информация о совершеннолетии на основе заданного возраста.
*/
var age = 32

if age >= 18 {
   print("Совершеннолетний")
} else {
   print("ВНИМАНИЕ Не совершеннолетний")
}

//Task 8
/*Задание: Работа с циклами
 Описание: Создайте программу, которая использует циклы для вывода чисел.
 Требования:
 Вывод чисел:
 Напишите цикл, который выводит первые 10 натуральных чисел.
 Вывод квадратов чисел:
 Реализуйте другой цикл, который выводит квадрат каждого из первых 10 натуральных чисел.
 Ожидаемый результат: При запуске программы на экран выводятся числа и их квадраты.
*/
for item in 1...10 {
    print(item)
}

// вывод квадратов чисел
for item in 1...10 {
    print("\(item * item)")
}

//Task 8.1
/*...Задание: Логическое "И" (&&)
 Описание: Разработайте программу, которая анализирует два булевых значения (true или false) и решает, соответствуют ли оба условия истине.
 Требования:
 Проверка условий:
 Проанализируйте два предоставленных булевых значения.

Если оба значения истинны (true), выведите сообщение "Оба условия выполняются".
 В противном случае, выведите "Не все условия выполняются".
 Ожидаемый результат: При анализе булевых значений программа корректно определяет, соответствуют ли оба условия истине или нет.
...*/
let numb = true
let numb2 = true

if numb == numb2 {
    print("Оба условия выполняются")
} else {
    print("Не все условия выполняются")
}

//Task 9
/*Задание: Логическое "ИЛИ" (||)
 Описание: Создайте программу, которая определяет, является ли хотя бы одно из двух булевых условий истинным.
 Требования:
 Проверка условий:
 Проанализируйте два предоставленных булевых значения.
 Если хотя бы одно из условий истинно (true), выведите "Хотя бы одно из условий выполняется".
 В противном случае, выведите "Оба условия ложны".
 Ожидаемый результат: Программа корректно определяет, является ли хотя бы одно из булевых условий истинным или нет.
*/
if (numb || numb2 == true){
    print("Xотя бы одно из условий выполняется")
} else {
    print("Оба условия ложны")
}

//Task 10
/*Задание: Логическое отрицание (!)
 Описание: Разработайте программу, которая определяет четность введенного числа.
 Требования:
 Анализ четности:
 Определите, является ли предоставленное число четным.
 Если число нечетное, используйте оператор ! для инвертирования результата и выводите "Число четное".
 Если число четное, выведите "Число нечетное".
 Ожидаемый результат: Программа корректно определяет четность числа и выводит соответствующий результат.*/

let check = 2
if check % 2  != 0 {
    print("Число нечетное")
} else {
    print("Число четное")
}


//Task 11
/*Задание: Комбинация операторов
 Описание: Создайте систему, которая определяет, может ли пользователь участвовать в важном мероприятии на основе двух булевых условий.
 Требования:
 Проверка условий участия:
 Определите, соответствуют ли два предоставленных условия: возраст пользователя старше 18 лет (isAdult) и наличие билета (hasTicket).
 Используйте операторы && и || для определения возможности участия в мероприятии.
 Если пользователь может участвовать, выведите "Добро пожаловать!".
 В противном случае, выведите "Доступ запрещен".
 Ожидаемый результат: Программа корректно определяет возможность участия пользователя в мероприятии на основе предоставленных условий.*/
let isAdult = true
let hasTicket = true

isAdult && hasTicket ? print("Добро пожаловать") : print("Доступ запрещен")

                  // Домашняя работа № 2
//Task 1
/* Задание: Четность числа
 - *Описание:* Разработайте функцию, которая определяет, является ли предоставленное число четным.
 - *Требования:*
   - Функция определения: Создайте функцию, которая принимает число в качестве параметра.
   - Функция должна возвращать true, если число четное, и false, если нечетное.
 - *Ожидаемый результат:* При передаче числа в функцию, она вернет результат четности числа.*/
func param(num: Int) -> Bool {
    if num % 2 == 0 {
        return true
    } else {
        return false
    }
}


//Task 2
/*Задание: Делимость на 3
 - *Описание:* Разработайте функцию, которая проверяет, делится ли предоставленное число на 3 без остатка.
 - *Требования:*
   - Функция проверки: Создайте функцию, принимающую число в качестве параметра.
   - Функция должна возвращать true, если число делится на 3 без остатка, и false в противном случае.
 - *Ожидаемый результат:* При передаче числа в функцию, она вернет результат деления числа на 3 без остатка.*/
func param1(num: Int) -> Bool {
    if ((num / 3) != 0) {
        return true
    } else {
        return false
    }
}


//Task 3
/*Задание: Массив из 100 чисел
 - *Описание:* Создайте возрастающий массив, содержащий 100 чисел.
 - *Требования:*
   - Создание массива: Массив должен начинаться с 1 и заканчиваться 100.
   - Удалите из массива все четные числа и числа, которые не делятся на 3.
 - *Ожидаемый результат:* В результате вы получите массив, в котором нет четных чисел и чисел, не делящихся на 3.*/
var mass = Array(1...100)
    for (index, _) in mass.enumerated().reversed(){
        mass[index] % 2 == 0 || mass[index] % 3 == 0 ? mass.remove(at: index) : nil
}
print(mass)


//Task 4
/*Задание: Числа Фибоначчи
 - *Описание:* Разработайте функцию, которая добавляет в массив новое число Фибоначчи.
 - *Требования:*
   - Функция Фибоначчи: Создайте функцию, которая добавляет в массив 50 чисел Фибоначчи. Числа Фибоначчи определяются соотношениями Fn=Fn-1 + Fn-2.
 - *Ожидаемый результат:* Массив, содержащий 50 чисел Фибоначчи.*/
func fibonacci() -> [Int] {
    var array = [0,1]
    for _ in 1...50 {
        let lastfibonacci = array[array.count-1] + array[array.count-2]
        array.append(lastfibonacci)
    }
    return array
}
var result = fibonacci()
print (result)


//Task 5
/*Задание: Факториал числа
 - *Описание:* Напишите функцию, которая рассчитывает факториал заданного числа N.
 - *Требования:*
   - Функция факториала: Функция принимает число N в качестве параметра.
   - Функция должна возвращать значение факториала для N.
 - *Ожидаемый результат:* При передаче числа в функцию, она вернет факториал этого числа.*/
func nFactorial(of n: Int) -> Int {
    var result = 1
    
    var i = 1
    
    repeat {
        result *= i
        i += 1
    } while i <= n

    return n
}
let scors = nFactorial(of: 5)
print(scors)


//Task 6
/*Задание: Простой калькулятор
 - *Описание:* Разработайте программу, которая выполняет арифметические операции между двумя числами.
 - *Требования:*
   - Функция калькулятора: Функция принимает два числа и операцию (сложение, вычитание, умножение, деление) в качестве параметров.
   - Функция должна возвращать результат выбранной операции.
 - *Ожидаемый результат:* При передаче двух чисел и операции в функцию, она вернет результат этой операции.*/
//func calc(a: Int, b: Int, operator: Operation) -> Int {
//    if a + b
//}
func calc(A: Int, B: Int) -> (add: Int, sub: Int, mult: Int, div: Int) {
    var add = A + B
    var sub = A - B
    var mult = A * B
    var div = B != 0 ? A / B : B / A
    return (add, sub, mult, div)
}


//Task 7
/*Задание: Длина строки
 - *Описание:* Разработайте функцию, которая определяет длину заданной строки.
 - *Требования:*
   - Функция определения длины: Функция принимает строку в качестве параметра.
   - Функция возвращает длину этой строки.
 - *Ожидаемый результат:* При передаче строки в функцию, она вернет длину этой строки.*/
func lengthStrings (a: String) -> Int {
    a.count
}
print(lengthStrings(a: "test"))


//Task 8
/*Задание: Максимум из трех чисел
 - *Описание:* Создайте функцию, которая определяет максимальное из трех предоставленных чисел.
 - *Требования:*
   - Функция нахождения максимума: Функция принимает три числа в качестве параметров.
   - Функция возвращает наибольшее из трех чисел.
 - *Ожидаемый результат:* При передаче трех чисел в функцию, она вернет наибольшее из них.*/
func maxInt(a: Int, b: Int, c: Int) -> Int {
    var max = a
    
    if b > max {
        max = b
    }
    if c > max {
        max = c
    }
    return max
}
print(maxInt(a: 10, b: 40, c: 30))


//Task 9
/*Задание: Реверс строки
 - *Описание:* Напишите функцию, которая переворачивает введенную пользователем строку.
 - *Требования:*
   - Функция реверса: Функция принимает строку в качестве параметра.
   - Функция возвращает эту строку в обратном порядке.
 - *Ожидаемый результат:* При передаче строки в функцию, она вернет эту строку в обратном порядке.*/
func reversStrings(a: String) -> String {
    String(a.reversed())
}
print(reversStrings(a: "dlroW"))









